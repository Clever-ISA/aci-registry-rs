on: 
  workflow_dispatch:
    inputs:
        dry-run: 
            required: false
            type: boolean
            default: true

permissions:
    contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Pull Submodules
      run: |
        git submodule update --remote
        git add ACI-Registry aci-tables
    - name: Install Rust Tools
      run: |
        rustup toolchain add stable --component rustc --component cargo
        cargo install cargo-bump
    - name: Update Package Version
      if: ${{!inputs.dry-run}}
      run: |
        cargo bump patch
        git add Cargo.toml
    - name: Try Compile
      id: try_compile
      run: cargo check
    - name: Commit Locally
      run: |
        git config user.name 'Clever-ISA Bot (Github Actions Automation)'
        git config user.email 'clever-isa-bot@users.noreply.github.com'
        git commit -m "ci: update submodules" || true
    - name: Publish to crates.io
      run: cargo publish
      if: ${{!inputs.dry-run}}
      id: publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
    - name: Push to github
      run: git push
    - name: Notify Webhook
      if: success() || failure()
      uses: appleboy/discord-action@master
      with:
        webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
        webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
        username: Clever-ISA Bot (Github Actions Automation)
        avatar_url: https://avatars.githubusercontent.com/Clever-ISA-Bot?v=4
        color: ${{ env.STATUS_COLOUR }}
        message: "aci-registry (Rust Bindings) Update ${{ inputs.dry-run && '(dry run only)' || ''}}: ${{ env.STATUS_MESSAGE }}"
      env:
          STATUS_COLOUR: ${{ (steps.try_compile.outcome != 'failure' && steps.publish.outcome != 'failure') && '#0fe33e' || '#ff0000' }}
          STATUS_MESSAGE: ${{ steps.try_compile.outcome == 'failure' && 'Package Build Failed' || (steps.publish.outcome == 'faliure' && 'Publish Failed' || 'Success')}}


    